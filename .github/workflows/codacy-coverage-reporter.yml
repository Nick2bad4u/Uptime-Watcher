name: Codacy Coverage Reporter

on:
    push:
        branches:
            - main

permissions: # added using https://github.com/step-security/secure-repo
    contents: read

jobs:
    codacy-coverage-reporter:
        runs-on: ubuntu-latest
        name: codacy-coverage-reporter
        steps:
            - name: Harden the runner (Audit all outbound calls)
              uses: step-security/harden-runner@ec9f2d5744a09debf3a187a3f4f675c53b671911 # v2.13.0
              with:
                  egress-policy: audit

            - name: Checkout
              id: checkout
              uses: actions/checkout@08c6903cd8c0fde910a37f88322edcfb5dd907a8 # v5.0.0
              with:
                  fetch-depth: 0

            - name: Set up Node
              id: setup-node
              uses: actions/setup-node@a0853c24544627f65ddf259abe73b1d18a591444 # v5.0.0
              with:
                  node-version: "22"
                  cache: "npm"

            - name: Install dependencies
              id: install-deps
              run: npm install --force

            - name: Build Frontend and Backend
              id: build
              run: |
                  npm run build

            # Run frontend tests with coverage
            - name: Run frontend tests
              id: test-frontend
              continue-on-error: true
              run: |
                  mkdir -p coverage
                  # Clean any existing coverage to avoid conflicts
                  rm -f coverage/lcov.info
                  npx vitest run --coverage --reporter=verbose --reporter=junit --outputFile=coverage/frontend-test-report.junit.xml

            # Run electron tests with coverage
            - name: Run electron tests
              id: test-electron
              continue-on-error: true
              run: |
                  mkdir -p coverage/electron
                  # Clean any existing coverage to avoid conflicts
                  rm -f coverage/electron/lcov.info
                  npx vitest run --config vitest.electron.config.ts --coverage --reporter=verbose --reporter=junit --outputFile=coverage/electron/electron-test-report.junit.xml

            # Run shared tests with coverage
            - name: Run shared tests
              id: test-shared
              continue-on-error: true
              run: |
                  mkdir -p coverage/shared
                  # Clean any existing coverage to avoid conflicts
                  rm -f coverage/shared/lcov.info
                  npx vitest run --config vitest.shared.config.ts --coverage --reporter=verbose --reporter=junit --outputFile=coverage/shared/shared-test-report.junit.xml

            # Verify coverage files exist
            - name: Verify coverage files
              run: |
                  echo "=== Checking coverage files ==="
                  ls -la coverage/ || echo "No coverage directory"
                  ls -la coverage/electron/ || echo "No electron coverage directory"
                  ls -la coverage/shared/ || echo "No shared coverage directory"
                  echo "=== Frontend coverage files ==="
                  find coverage/ -maxdepth 1 -name "*.info" -o -name "lcov.info" || echo "No lcov files found in coverage/"
                  echo "=== Electron coverage files ==="
                  find coverage/electron/ -name "*.info" -o -name "lcov.info" || echo "No lcov files found in coverage/electron/"
                  echo "=== Shared coverage files ==="
                  find coverage/shared/ -name "*.info" -o -name "lcov.info" || echo "No lcov files found in coverage/shared/"
                  echo "=== Test report files ==="
                  find coverage/ -name "*.junit.xml" || echo "No junit files"
            - name: Run codacy-coverage-reporter
              uses: codacy/codacy-coverage-reporter-action@89d6c85cfafaec52c72b6c5e8b2878d33104c699 # v1.3.0
              with:
                  project-token: ${{ secrets.CODACY_PROJECT_TOKEN }}
                  api-token: ${{ secrets.CODACY_API_TOKEN }}
                  coverage-reports: ./coverage/lcov.info,./coverage/electron/lcov.info,./coverage/shared/lcov.info
