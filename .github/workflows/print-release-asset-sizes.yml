name: Print Release Asset Sizes

on:
    workflow_dispatch:
    workflow_run:
        workflows: ["Build and Release Electron App"]
        types:
            - completed

# Permissions required for accessing release assets
permissions:
    contents: read

concurrency:
    group: assetsizes-${{ github.ref }}
    cancel-in-progress: false

jobs:
    print-release-asset-sizes:
        runs-on: ubuntu-latest
        if: ${{ github.event.workflow_run.conclusion == 'success' }}

        steps:
            - name: Harden the runner (Audit all outbound calls)
              uses: step-security/harden-runner@f4a75cfd619ee5ce8d5b864b0d183aff3c69b55a # v2.13.1
              with:
                  egress-policy: audit

            - name: Checkout repository
              uses: actions/checkout@08c6903cd8c0fde910a37f88322edcfb5dd907a8 # v5.0.0

            - name: Wait for release to be available
              run: |
                  echo "Waiting 360 (6 minutes) seconds for release to be properly created..."
                  sleep 360

            - name: Check if releases exist
              env:
                  GH_TOKEN: ${{ secrets.GITHUB_TOKEN }}
              run: |
                  if ! gh release list --limit 1 > /dev/null 2>&1; then
                    echo "No releases found, skipping asset size calculation"
                    exit 0
                  fi

            - name: Calculate and print release asset sizes
              env:
                  GH_TOKEN: ${{ secrets.GITHUB_TOKEN }}
                  bash: bash
              run: |-
                  printf '| Release Tag | Size (MB) | Size (GB) | Downloads |\n' > sizes.md
                  printf '|------------|-----------|-----------|-----------|\n' >> sizes.md
                  total_size=0
                  total_downloads=0
                  for tag in $(gh release list --limit 1000 --json tagName -q '.[].tagName'); do
                    assets_json=$(gh release view "$tag" --json assets)
                    release_size=0
                    release_downloads=0
                    for size in $(echo "$assets_json" | jq -r '.assets[].size'); do
                      release_size=$((release_size + size))
                      total_size=$((total_size + size))
                    done
                    for count in $(echo "$assets_json" | jq -r '.assets[].downloadCount'); do
                      release_downloads=$((release_downloads + count))
                      total_downloads=$((total_downloads + count))
                    done
                    release_size_mb=$(awk "BEGIN {printf \"%.2f\", $release_size/1024/1024}")
                    release_size_gb=$(awk "BEGIN {printf \"%.3f\", $release_size/1024/1024/1024}")
                    printf '| %s | %s | %s | %s |\n' "$tag" "$release_size_mb" "$release_size_gb" "$release_downloads" >> sizes.md
                  done
                  total_size_mb=$(awk "BEGIN {printf \"%.2f\", $total_size/1024/1024}")
                  total_size_gb=$(awk "BEGIN {printf \"%.3f\", $total_size/1024/1024/1024}")
                  printf '\n**Total asset size across all releases:** %s bytes (%s MB, %s GB)\n' "$total_size" "$total_size_mb" "$total_size_gb" >> sizes.md
                  printf '**Total downloads across all releases:** %s\n' "$total_downloads" >> sizes.md
            - name: Print summary table to GitHub Actions summary
              run: |
                  {
                    echo "## ðŸš€ Release Asset Size Report"
                    echo ""
                    echo "| Release Tag | Size (MB) | Size (GB) | Downloads |"
                    echo "|------------|-----------|-----------|-----------|"
                    tail -n +3 sizes.md | grep -v '^\*\*Total'
                    echo ""
                    total_size=$(grep -oP '(?<=Total asset size across all releases:\*\*)[0-9]+' sizes.md | head -1)
                    total_size_mb=$(grep -oP '(?<=\()[0-9.]+ MB' sizes.md | head -1)
                    total_size_gb=$(grep -oP '(?<=, )[0-9.]+ GB' sizes.md | head -1)
                    total_downloads=$(grep -oP '(?<=Total downloads across all releases:\*\*)[0-9]+' sizes.md | head -1)
                    echo "---"
                    echo "### ðŸ“Š Totals"
                    echo "- **Total asset size:** $total_size bytes ($total_size_mb, $total_size_gb)"
                    echo "- **Total downloads:** $total_downloads"
                  } >> "$GITHUB_STEP_SUMMARY"

            - name: Upload sizes.md as artifact
              uses: actions/upload-artifact@330a01c490aca151604b8cf639adc76d48f6c5d4 # v5.0.0
              with:
                  name: release-asset-sizes
                  path: sizes.md
