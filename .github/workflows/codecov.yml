name: Run tests and upload coverage

# Prevent multiple test runs from conflicting
concurrency:
    group: codecov-${{ github.ref }}
    cancel-in-progress: true

on:
    push:
        branches: [main]
    pull_request:
        branches: [main]
    workflow_dispatch:

# Permissions required for test execution and coverage upload
permissions:
    contents: read

jobs:
    test:
        name: Run tests and collect coverage
        runs-on: ubuntu-latest

        steps:
            - name: Harden the runner (Audit all outbound calls)
              uses: step-security/harden-runner@f4a75cfd619ee5ce8d5b864b0d183aff3c69b55a # v2.13.1
              with:
                  egress-policy: audit

            - name: Checkout
              id: checkout
              uses: actions/checkout@08c6903cd8c0fde910a37f88322edcfb5dd907a8 # v5.0.0
              with:
                  fetch-depth: 5

            - name: Set up Node
              id: setup-node
              uses: actions/setup-node@a0853c24544627f65ddf259abe73b1d18a591444 # v5.0.0
              with:
                  node-version: "22"
                  cache: "npm"

            - name: Install dependencies
              id: install-deps
              run: npm install --force

            - name: Build Frontend and Backend
              id: build
              run: |
                  npm run build
              continue-on-error: true
              env:
                  CODECOV_TOKEN: ${{ secrets.CODECOV_TOKEN }}

            - name: Build Storybook Bundle
              id: build-storybook
              run: |
                  npm run build-storybook
              continue-on-error: true
              env:
                  CODECOV_TOKEN: ${{ secrets.CODECOV_TOKEN }}

            # Run frontend tests with coverage
            - name: Run frontend tests
              id: test-frontend
              run: |
                  mkdir -p coverage
                  # Clean any existing coverage to avoid conflicts
                  rm -f coverage/lcov.info
                  npx vitest run --config vitest.config.ts --coverage --reporter=verbose --reporter=junit --outputFile=coverage/frontend-test-report.junit.xml
              continue-on-error: true
              env:
                  CODECOV_TOKEN: ${{ secrets.CODECOV_TOKEN }}

            # Run electron tests with coverage
            - name: Run electron tests
              id: test-electron
              run: |
                  mkdir -p coverage/electron
                  # Clean any existing coverage to avoid conflicts
                  rm -f coverage/electron/lcov.info
                  npx vitest run --config vitest.electron.config.ts --coverage --reporter=dot --reporter=junit --outputFile=coverage/electron/electron-test-report.junit.xml
              continue-on-error: true
              env:
                  CODECOV_TOKEN: ${{ secrets.CODECOV_TOKEN }}

            # Run shared tests with coverage
            - name: Run shared tests
              id: test-shared
              run: |
                  mkdir -p coverage/shared
                  # Clean any existing coverage to avoid conflicts
                  rm -f coverage/shared/lcov.info
                  npx vitest run --config vitest.shared.config.ts --coverage --reporter=dot --reporter=junit --outputFile=coverage/shared/shared-test-report.junit.xml
              continue-on-error: true
              env:
                  CODECOV_TOKEN: ${{ secrets.CODECOV_TOKEN }}

            # Verify coverage files exist
            - name: Verify coverage files
              run: |
                  echo "=== Checking coverage files ==="
                  ls -la coverage/ || echo "No coverage directory"
                  ls -la coverage/electron/ || echo "No electron coverage directory"
                  ls -la coverage/shared/ || echo "No shared coverage directory"
                  echo "=== Frontend coverage files ==="
                  find coverage/ -maxdepth 1 -name "*.info" -o -name "lcov.info" || echo "No lcov files found in coverage/"
                  echo "=== Electron coverage files ==="
                  find coverage/electron/ -name "*.info" -o -name "lcov.info" || echo "No lcov files found in coverage/electron/"
                  echo "=== Shared coverage files ==="
                  find coverage/shared/ -name "*.info" -o -name "lcov.info" || echo "No lcov files found in coverage/shared/"
                  echo "=== Test report files ==="
                  find coverage/ -name "*.junit.xml" || echo "No junit files"
              continue-on-error: true

            # Upload frontend coverage to Codecov
            - name: Upload frontend coverage to Codecov
              id: upload-frontend-coverage
              uses: codecov/codecov-action@5a1091511ad55cbe89839c7260b706298ca349f7 # v5.5.1
              with:
                  token: ${{ secrets.CODECOV_TOKEN }}
                  slug: Nick2bad4u/Uptime-Watcher
                  files: ./coverage/lcov.info
                  flags: frontend
                  name: frontend-coverage
                  verbose: true
                  fail_ci_if_error: false
                  disable_search: true
                  directory: ./coverage
                  root_dir: ./
                  working-directory: ./
              env:
                  CODECOV_TOKEN: ${{ secrets.CODECOV_TOKEN }}

            # Upload electron coverage to Codecov
            - name: Upload electron coverage to Codecov
              id: upload-electron-coverage
              uses: codecov/codecov-action@5a1091511ad55cbe89839c7260b706298ca349f7 # v5.5.1
              with:
                  token: ${{ secrets.CODECOV_TOKEN }}
                  slug: Nick2bad4u/Uptime-Watcher
                  files: ./coverage/electron/lcov.info
                  flags: electron
                  name: electron-coverage
                  verbose: true
                  fail_ci_if_error: false
                  disable_search: true
                  directory: ./coverage/electron
                  root_dir: ./
                  working-directory: ./
              env:
                  CODECOV_TOKEN: ${{ secrets.CODECOV_TOKEN }}

            # Upload shared coverage to Codecov
            - name: Upload shared coverage to Codecov
              id: upload-shared-coverage
              uses: codecov/codecov-action@5a1091511ad55cbe89839c7260b706298ca349f7 # v5.5.1
              with:
                  token: ${{ secrets.CODECOV_TOKEN }}
                  slug: Nick2bad4u/Uptime-Watcher
                  files: ./coverage/shared/lcov.info
                  flags: shared
                  name: shared-coverage
                  verbose: true
                  fail_ci_if_error: false
                  disable_search: true
                  directory: ./coverage/shared
                  root_dir: ./
                  working-directory: ./
              env:
                  CODECOV_TOKEN: ${{ secrets.CODECOV_TOKEN }}

            # Upload test results
            - name: Upload frontend test results to Codecov
              id: upload-frontend-test-results
              uses: codecov/test-results-action@47f89e9acb64b76debcd5ea40642d25a4adced9f # v1.1.1
              with:
                  files: ./coverage/frontend-test-report.junit.xml
                  token: ${{ secrets.CODECOV_TOKEN }}
                  flags: frontend-tests
                  name: frontend-test-results
                  verbose: true
              continue-on-error: true
              env:
                  CODECOV_TOKEN: ${{ secrets.CODECOV_TOKEN }}
                  CODECOV_VERBOSE: true

            - name: Upload electron test results to Codecov
              id: upload-electron-test-results
              uses: codecov/test-results-action@47f89e9acb64b76debcd5ea40642d25a4adced9f # v1.1.1
              with:
                  files: ./coverage/electron/electron-test-report.junit.xml
                  token: ${{ secrets.CODECOV_TOKEN }}
                  flags: electron-tests
                  name: electron-test-results
                  verbose: true
              continue-on-error: true
              env:
                  CODECOV_TOKEN: ${{ secrets.CODECOV_TOKEN }}
                  CODECOV_VERBOSE: true

            - name: Upload shared test results to Codecov
              id: upload-shared-test-results
              uses: codecov/test-results-action@47f89e9acb64b76debcd5ea40642d25a4adced9f # v1.1.1
              with:
                  files: ./coverage/shared/shared-test-report.junit.xml
                  token: ${{ secrets.CODECOV_TOKEN }}
                  flags: shared-tests
                  name: shared-test-results
                  verbose: true
              continue-on-error: true
              env:
                  CODECOV_TOKEN: ${{ secrets.CODECOV_TOKEN }}
                  CODECOV_VERBOSE: true
