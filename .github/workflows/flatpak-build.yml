# GitHub Action to build Flatpak using flatpak-builder
# This workflow builds your Electron app as a Flatpak using flatpak-builder directly.

name: Build Flatpak

on:
    workflow_dispatch:
    workflow_run:
        workflows: ["Build and Release Electron App"]
        types:
            - completed

concurrency:
    group: flatpak-build-${{ github.ref }}
    cancel-in-progress: false

jobs:
    build-flatpak:
        runs-on: ubuntu-latest
        steps:
            - name: Harden the runner (Audit all outbound calls)
              uses: step-security/harden-runner@f4a75cfd619ee5ce8d5b864b0d183aff3c69b55a # v2.13.1
              with:
                  egress-policy: audit

            - name: Checkout repository
              uses: actions/checkout@08c6903cd8c0fde910a37f88322edcfb5dd907a8 # v5.0.0

            - name: Cache Flatpak runtimes and SDKs
              uses: actions/cache@0057852bfaa89a56745cba8c7296529d2fc39830 # v4.3.0
              with:
                  path: |
                      /var/lib/flatpak
                      ~/.local/share/flatpak
                  key: ${{ runner.os }}-flatpak-runtimes-24.08
                  restore-keys: |
                      ${{ runner.os }}-flatpak-runtimes-
              continue-on-error: true

            - name: Install Flatpak and flatpak-builder
              run: |
                  sudo apt-get update
                  sudo apt-get install -y flatpak flatpak-builder elfutils libarchive-tools

                  # Configure Flatpak for user (not system-wide)
                  flatpak remote-add --user --if-not-exists flathub https://flathub.org/repo/flathub.flatpakrepo

                  # Install required runtimes and SDKs for user
                  flatpak install --user -y --noninteractive flathub \
                    org.freedesktop.Platform//24.08 \
                    org.freedesktop.Sdk//24.08 \
                    org.electronjs.Electron2.BaseApp//24.08 \
                    org.freedesktop.Sdk.Extension.node24//24.08

                  # Update all installed packages for user
                  flatpak update --user -y

                  # Verify installations
                  flatpak list --user --runtime
              continue-on-error: true

            - name: Verify Flatpak components
              run: |
                  echo "Verifying required Flatpak components are available (user scope)"
                  echo "Available runtimes:"
                  flatpak list --user --runtime
                  echo ""
                  echo "Checking specific components:"
                  flatpak info --user org.freedesktop.Platform//24.08 || (echo "Platform missing" && exit 1)
                  flatpak info --user org.freedesktop.Sdk//24.08 || (echo "SDK missing" && exit 1)
                  flatpak info --user org.electronjs.Electron2.BaseApp//24.08 || (echo "Electron BaseApp missing" && exit 1)
                  flatpak info --user org.freedesktop.Sdk.Extension.node24//24.08 || (echo "Node24 extension missing" && exit 1)
                  echo "All required components verified successfully"
              continue-on-error: true

            # Removed duplicate SDK extension install step (handled above system-wide)

            - name: Set up Node.js
              uses: actions/setup-node@a0853c24544627f65ddf259abe73b1d18a591444 # v5.0.0
              with:
                  node-version: "latest"
                  cache: "npm"

            - name: Cache build artifacts and dependencies
              uses: actions/cache@0057852bfaa89a56745cba8c7296529d2fc39830 # v4.3.0
              with:
                  path: |
                      node_modules
                      ~/.npm
                      .cache
                      node_modules/.cache
                      dist
                      **/.rspack-cache
                      **/.webpack-cache
                  key: ${{ runner.os }}-flatpak-build-${{ hashFiles('**/package-lock.json') }}
                  restore-keys: |
                      ${{ runner.os }}-flatpak-build-
                      ${{ runner.os }}-node-
                  enableCrossOsArchive: true

            - name: Install dependencies
              run: |
                  echo "Installing Node.js dependencies..."
                  npm ci --prefer-offline --no-audit --progress=false
                  echo "Dependencies installed successfully"

            - name: Build application
              run: |
                  npm run build

            - name: Smoke-check build artifacts
              run: |
                  echo "Checking for dist/main.js and sqlite wasm..."
                  if [ ! -f "dist/main.js" ]; then
                    echo "Error: dist/main.js not found"
                    ls -la dist || true
                    exit 1
                  fi
                  if [ ! -f "dist/node-sqlite3-wasm.wasm" ] && [ ! -f "dist/node-sqlite3-wasm.wasm" ]; then
                    # check typical wasm locations
                    echo "Warning: node-sqlite3-wasm.wasm not found in dist"
                    ls -la dist || true
                    exit 1
                  fi
              env:
                  GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
                  GH_TOKEN: ${{ secrets.GITHUB_TOKEN }}

            - name: Build Flatpak
              run: |
                  echo "Starting Flatpak build process..."
                  echo "Current directory contents:"
                  ls -la

                  echo "Verifying flatpak-build.yml exists:"
                  cat "flatpak-build.yml" || (echo "flatpak-build.yml not found!" && exit 1)

                  echo "Available Flatpak runtimes:"
                  flatpak list --runtime

                  echo "Building Flatpak package..."
                  # Build into a proper flatpak repo directory
                  flatpak-builder --verbose --repo=flatpak-repo --force-clean build-dir "flatpak-build.yml"

                  echo "Build completed. Checking outputs:"
                  ls -la flatpak-repo/ || echo "flatpak-repo not created"
                  ls -la build-dir/ || echo "build-dir not created"
                  ls -la dist/ || echo "dist not found"
              env:
                  GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
                  GH_TOKEN: ${{ secrets.GITHUB_TOKEN }}
                  CI: true
                  DEBUG: "@malept/flatpak-bundler"

            - name: Create FlatPak bundle
              run: |
                  cd .
                  ls -l
                  ls -l flatpak-repo || true
                  # Use the correct app ID from the manifest and the flatpak-repo produced by flatpak-builder
                  flatpak build-bundle flatpak-repo Uptime-Watcher.flatpak io.github.uptimewatcher
              env:
                  GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
                  CI: true
                  DEBUG: "@malept/flatpak-bundler"

            # Optionally, upload the FlatPak bundle as an artifact
            - name: Upload FlatPak bundle
              uses: actions/upload-artifact@ea165f8d65b6e75b540449e92b4886f43607fa02 # v4.6.2
              with:
                  name: flatpak-bundle
                  path: ./Uptime-Watcher.flatpak

            - name: Zip Flatpak bundle
              run: |
                  cd .
                  ls -l
                  zip Uptime-Watcher.flatpak.zip Uptime-Watcher.flatpak

            - name: Get latest release tag
              id: get_release
              uses: actions/github-script@ed597411d8f924073f98dfc5c65a23a2325f34cd # v8.0.0
              with:
                  script: |
                      const releases = await github.rest.repos.listReleases({
                        owner: context.repo.owner,
                        repo: context.repo.repo,
                      });
                      if (releases.data.length === 0) {
                        throw new Error('No releases found');
                      }
                      return releases.data[0].tag_name;
                  result-encoding: string

            - name: Rename Flatpak and zip with version
              run: |
                  cd .
                  mv Uptime-Watcher.flatpak Uptime-Watcher-${{ steps.get_release.outputs.result }}.flatpak
                  mv Uptime-Watcher.flatpak.zip Uptime-Watcher-${{ steps.get_release.outputs.result }}.flatpak.zip

            - name: Upload .flatpak and .zip to latest release
              env:
                  GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
                  RELEASE_TAG: ${{ steps.get_release.outputs.result }}
              run: |
                  gh release upload "$RELEASE_TAG" "./Uptime-Watcher-${RELEASE_TAG}.flatpak" "./Uptime-Watcher-${RELEASE_TAG}.flatpak.zip" --clobber
