# GitHub Action to build Flatpak using flatpak-builder
# This workflow builds your Electron app as a Flatpak using flatpak-builder directly.

name: Build Flatpak

on:
    workflow_dispatch:
    workflow_run:
        workflows: ["Build and Release Electron App"]
        types:
            - completed

concurrency:
    group: flatpak-build-${{ github.ref }}
    cancel-in-progress: false

jobs:
    build-flatpak:
        runs-on: ubuntu-latest
        steps:
            - name: Harden the runner (Audit all outbound calls)
              uses: step-security/harden-runner@ec9f2d5744a09debf3a187a3f4f675c53b671911 # v2.13.0
              with:
                  egress-policy: audit

            - name: Checkout repository
              uses: actions/checkout@11bd71901bbe5b1630ceea73d27597364c9af683 # v4.2.2

            - name: Cache node modules (non-Windows)
              id: cache_node_modules_non_windows
              if: runner.os != 'Windows'
              uses: actions/cache@5a3ec84eff668545956fd18022155c47e93e2684 # v4.2.3
              with:
                  path: ./node_modules
                  key: ${{ runner.os }}-node-${{ hashFiles('**/package-lock.json') }}
                  restore-keys: |
                      ${{ runner.os }}-node-
                  enableCrossOsArchive: true
              continue-on-error: true

            - name: Install Flatpak and flatpak-builder
              run: |
                  sudo apt-get update
                  sudo apt-get install -y flatpak flatpak-builder elfutils libarchive-tools
                  flatpak remote-add --if-not-exists --user flathub https://flathub.org/repo/flathub.flatpakrepo
                  flatpak install -y --noninteractive --user flathub org.freedesktop.Platform//24.08 org.freedesktop.Sdk//24.08
                  flatpak install -y --noninteractive --user flathub org.electronjs.Electron2.BaseApp//24.08
                  flatpak update -y --user

            - name: Install Flatpak SDK extensions
              run: |
                  # Ensure the flathub remote exists and install the required SDK extensions
                  flatpak remote-add --if-not-exists --user flathub https://flathub.org/repo/flathub.flatpakrepo
                  # Use explicit refs (//24.08) to avoid interactive selection when multiple versions exist
                  flatpak install -y --noninteractive --user flathub \
                    org.freedesktop.Sdk.Extension.node24//24.08 \
                    org.freedesktop.Sdk.Extension.typescript//24.08
              env:
                  CI: true

            - name: Set up Node.js
              uses: actions/setup-node@49933ea5288caeca8642d1e84afbd3f7d6820020 # v4.4.0
              with:
                  node-version: "latest"

            - name: Install dependencies
              run: |
                  cd .
                  npm install --force

            - name: Build application
              run: |
                  npm run build

            - name: Smoke-check build artifacts
              run: |
                  echo "Checking for dist-electron/main.js and sqlite wasm..."
                  if [ ! -f "dist-electron/main.js" ]; then
                    echo "Error: dist-electron/main.js not found"
                    ls -la dist-electron || true
                    exit 1
                  fi
                  if [ ! -f "dist-electron/node-sqlite3-wasm.wasm" ] && [ ! -f "dist-electron/node-sqlite3-wasm.wasm" ]; then
                    # check typical wasm locations
                    echo "Warning: node-sqlite3-wasm.wasm not found in dist-electron"
                    ls -la dist-electron || true
                    exit 1
                  fi
              env:
                  GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
                  GH_TOKEN: ${{ secrets.GITHUB_TOKEN }}

            - name: Build Flatpak
              run: |
                  cd .
                  ls -l
                  # Always build the dist repo to ensure it exists and is up-to-date
                  flatpak-builder --repo=dist-electron --force-clean build-dir flatpak-build.yml
                  ls -l
                  ls -l dist
              env:
                  GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
                  GH_TOKEN: ${{ secrets.GITHUB_TOKEN }}
                  CI: true
                  DEBUG: "@malept/flatpak-bundler"

            - name: Create FlatPak bundle
              run: |
                  cd .
                  ls -l
                  ls -l dist-electron
                  # Use the dist-electron repo produced by flatpak-builder
                  flatpak build-bundle dist-electron Uptime-Watcher.flatpak com.nick2bad4u.Uptime-Watcher
              env:
                  GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
                  CI: true
                  DEBUG: "@malept/flatpak-bundler"

            # Optionally, upload the FlatPak bundle as an artifact
            - name: Upload FlatPak bundle
              uses: actions/upload-artifact@ea165f8d65b6e75b540449e92b4886f43607fa02 # v4.6.2
              with:
                  name: flatpak-bundle
                  path: ./Uptime-Watcher.flatpak

            - name: Zip Flatpak bundle
              run: |
                  cd .
                  ls -l
                  zip Uptime-Watcher.flatpak.zip Uptime-Watcher.flatpak

            - name: Get latest release tag
              id: get_release
              uses: actions/github-script@60a0d83039c74a4aee543508d2ffcb1c3799cdea # v7.0.1
              with:
                  script: |
                      const releases = await github.rest.repos.listReleases({
                        owner: context.repo.owner,
                        repo: context.repo.repo,
                      });
                      if (releases.data.length === 0) {
                        throw new Error('No releases found');
                      }
                      return releases.data[0].tag_name;
                  result-encoding: string

            - name: Rename Flatpak and zip with version
              run: |
                  cd .
                  mv Uptime-Watcher.flatpak Uptime-Watcher-${{ steps.get_release.outputs.result }}.flatpak
                  mv Uptime-Watcher.flatpak.zip Uptime-Watcher-${{ steps.get_release.outputs.result }}.flatpak.zip

            - name: Upload .flatpak and .zip to latest release
              env:
                  GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
                  RELEASE_TAG: ${{ steps.get_release.outputs.result }}
              run: |
                  gh release upload "$RELEASE_TAG" "./Uptime-Watcher-${RELEASE_TAG}.flatpak" "./Uptime-Watcher-${RELEASE_TAG}.flatpak.zip" --clobber
