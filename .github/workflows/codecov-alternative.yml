# Alternative codecov.yml approach with separate test runs

name: Run tests and upload coverage

on:
    workflow_dispatch:

jobs:
    test:
        name: Run tests and collect coverage
        runs-on: ubuntu-latest

        steps:
            - name: Harden the runner (Audit all outbound calls)
              uses: step-security/harden-runner@ec9f2d5744a09debf3a187a3f4f675c53b671911 # v2.13.0
              with:
                  egress-policy: audit

            - name: Checkout
              uses: actions/checkout@11bd71901bbe5b1630ceea73d27597364c9af683 # v4.2.2
              with:
                  fetch-depth: 0

            - name: Set up Node
              uses: actions/setup-node@49933ea5288caeca8642d1e84afbd3f7d6820020 # v4.4.0
              with:
                  node-version: "20"
                  cache: "npm"

            - name: Install dependencies
              run: npm install --force

            # Run frontend tests with jsdom environment
            - name: Run frontend tests
              run: npx vitest run src/**/*.test.{ts,tsx} --coverage --environment=jsdom --reporter=verbose

            # Run electron tests with node environment
            - name: Run electron tests
              run: npx vitest run electron/**/*.test.ts --coverage --environment=node --reporter=verbose

            # Generate combined JUnit report
            - name: Run all tests for JUnit report
              run: |
                  npx vitest run --reporter=junit \
                    --outputFile=coverage/test-report.junit.xml

            - name: Upload results to Codecov
              uses: codecov/codecov-action@18283e04ce6e62d37312384ff67231eb8fd56d24 # v5.4.3
              with:
                  token: ${{ secrets.CODECOV_TOKEN }}
                  slug: Nick2bad4u/Uptime-Watcher
                  fail_ci_if_error: true

            - name: Upload results to Codecov
              if: ${{ !cancelled() }}
              uses: codecov/test-results-action@47f89e9acb64b76debcd5ea40642d25a4adced9f # v1.1.1
              with:
                  files: coverage/test-report.junit.xml
                  token: ${{ secrets.CODECOV_TOKEN }}
