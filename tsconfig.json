{
    "compilerOptions": {
        "target": "ES2020",
        "skipDefaultLibCheck": false,
        "useDefineForClassFields": true,
        "lib": ["ES2020", "DOM", "DOM.Iterable"],
        "module": "CommonJS",
        "moduleResolution": "node",
        "resolveJsonModule": true,
        "skipLibCheck": true,
        "isolatedModules": true,
        "plugins": [
            {
                "name": "typescript-eslint-language-service"
            }
        ],
        "jsx": "react-jsx",
        "types": ["react", "react-dom", "vitest/globals", "@testing-library/jest-dom", "vite/client"],
        "outDir": "dist-electron",
        "baseUrl": ".",
        "paths": {
            "@/*": ["src/*"]
        },
        "esModuleInterop": true,
        "allowJs": true,
        "allowSyntheticDefaultImports": true,
        "strict": true,
        "alwaysStrict": true,
        "strictNullChecks": true,
        "strictPropertyInitialization": true,
        "exactOptionalPropertyTypes": true,
        "noImplicitReturns": true,
        "noFallthroughCasesInSwitch": true,
        "noUncheckedIndexedAccess": true,
        "noImplicitOverride": true,
        "noImplicitAny": true,
        "noImplicitThis": true,
        "noUnusedLocals": true,
        "noUnusedParameters": true,
        "allowUnusedLabels": false,
        "allowUnreachableCode": false,
        "forceConsistentCasingInFileNames": true,
        "noPropertyAccessFromIndexSignature": false,
        "strictBindCallApply": true,
        "strictFunctionTypes": true,
        "useUnknownInCatchVariables": true
    },
    "include": [
        "src/**/*.ts",
        "src/**/*.tsx",
        "src/**/*.test.ts",
        "src/**/*.test.tsx",
        "electron/**/*.ts",
        "electron/**/*.tsx",
        "electron/**/*.test.ts",
        "vite.config.ts"
    ],
    "exclude": [
        "node_modules",
        "**/node_modules",
        "dist",
        "dist-electron",
        "release",
        "out",
        "vite.config.ts",
        "electron/**/*.test.ts"
    ]
    // Separate tsconfig should be used for renderer (src/) if needed
}
