# Gitleaks Configuration for Uptime Watcher - 2025 Enhanced Security
# Modern configuration following Gitleaks v8.28+ best practices with latest rules
# See: https://github.com/gitleaks/gitleaks/blob/master/config/gitleaks.toml

title = "Uptime Watcher - Enhanced Secret Detection Configuration"

# Extend the default Gitleaks configuration with modern v8.28+ rules
# The default configuration includes comprehensive patterns for:
# - API keys (AWS, Azure, GCP, GitHub, etc.)
# - Database credentials
# - Authentication tokens
# - Certificates and private keys
# - Service-specific secrets
# - New AI platform keys (OpenAI, Anthropic, etc.)
[extend]
useDefault = true

# Disable overly broad rules that generate false positives
# in JavaScript/TypeScript development environments
disabledRules = [
    "generic-api-key", # Too broad for demo URLs and example code
]

# Performance optimizations enabled by default in v8.28+
# - Stopword optimization (promoted from experimental)
# - Fragment newline calculation optimization
# - Enhanced allowlist processing

# Custom rules for project-specific patterns
[[rules]]
id = "electron-config-secrets"
description = "Detect hardcoded secrets in Electron configuration files"
regex = '''(?i)(electron[_-]?(?:secret|key|token|password|credential))\s*[:=]\s*["']?([a-zA-Z0-9]{16,})["']?'''
secretGroup = 2
keywords = ["electron", "secret", "key", "token", "password"]
tags = ["electron", "configuration", "secrets"]

[[rules.allowlists]]
description = "Allow example values in documentation"
paths = ['''docs/.*\.(md|txt|rst)$''']
regexTarget = "secret"
regexes = ['''(?i)(example|demo|placeholder|test|sample)''']

[[rules]]
id = "database-connection-strings"
description = "Detect database connection strings with embedded credentials"
regex = '''(?i)(database_url|db_url|connection_string)\s*[:=]\s*["']?([^"'\s]+://[^"'\s]*:[^"'\s]*@[^"'\s]+)["']?'''
secretGroup = 2
keywords = ["database", "connection", "url", "db"]
tags = ["database", "credentials", "connection-string"]

[[rules.allowlists]]
description = "Allow example connection strings in documentation"
paths = ['''docs/.*\.(md|txt|rst)$''']
regexTarget = "secret"
regexes = ['''(?i)(example|localhost|127\.0\.0\.1|test|demo)''']

[[rules]]
id = "vite-env-secrets"
description = "Detect secrets in Vite environment variable definitions"
regex = '''(?i)VITE_(?:API_|SECRET_|PASSWORD_|TOKEN_|KEY_)[A-Z0-9_]*\s*[:=]\s*["']?([a-zA-Z0-9+/=]{16,})["']?'''
secretGroup = 1
keywords = ["vite_", "api_", "secret_", "password_", "token_", "key_"]
tags = ["vite", "environment", "frontend", "secrets"]

[[rules.allowlists]]
description = "Allow development and test values"
regexTarget = "secret"
regexes = [
    '''(?i)(development|dev|test|local|localhost|example|demo|placeholder)''',
    '''^(true|false|1|0|yes|no|enabled|disabled)$''',
]

# Enhanced AI platform detection rules (v8.28+ features)
[[rules]]
id = "anthropic-enhanced-detection"
description = "Enhanced detection for Anthropic API keys including all variants"
regex = '''\b(sk-ant-(?:api03|admin01)-[a-zA-Z0-9_\-]{93}AA)(?:[\x60'"\s;]|\\[nr]|$)'''
keywords = ["sk-ant-api03", "sk-ant-admin01"]
tags = ["ai", "anthropic", "api-key"]

[[rules]]
id = "perplexity-api-detection"
description = "Detect Perplexity AI API keys"
regex = '''\b(pplx-[a-zA-Z0-9]{48})(?:[\x60'"\s;]|\\[nr]|$)'''
keywords = ["pplx-"]
tags = ["ai", "perplexity", "api-key"]

# Global allowlists to reduce false positives
[[allowlists]]
description = "Ignore test and example files"
paths = [
    '''test/.*''',
    '''tests/.*''',
    '''__tests__/.*''',
    '''.*\.test\.(js|ts|jsx|tsx)$''',
    '''.*\.spec\.(js|ts|jsx|tsx)$''',
    '''examples?/.*''',
    '''demo/.*''',
    '''samples?/.*''',
    '''docs/.*\.(md|txt|rst)$''',
    '''README\.md$''',
    '''CHANGELOG\.md$''',
    '''CONTRIBUTING\.md$''',
]

[[allowlists]]
description = "Ignore build artifacts and dependencies"
paths = [
    '''node_modules/.*''',
    '''dist/.*''',
    '''dist-electron/.*''',
    '''build/.*''',
    '''coverage/.*''',
    '''\.git/.*''',
    '''.*\.min\.(js|css)$''',
    '''.*\.(map|d\.ts)$''',
    '''.*\.wasm$''',
    '''.*\.snap$''',
    '''.*\.log$''',
]

[[allowlists]]
description = "Ignore configuration files with known false positives"
paths = [
    '''\.gitleaks\.toml$''',
    '''\.gitignore$''',
    '''\.eslintrc.*''',
    '''.*config\.(js|ts|mjs|json)$''',
    '''package(-lock)?\.json$''',
    '''yarn\.lock$''',
    '''pnpm-lock\.yaml$''',
    '''tsconfig.*\.json$''',
    '''vite\.config\.(js|ts|mjs)$''',
    '''vitest\.config\.(js|ts|mjs)$''',
    '''tailwind\.config\.(js|ts|mjs)$''',
    '''postcss\.config\.(js|ts|mjs)$''',
    '''biome\.json$''',
]

[[allowlists]]
description = "Ignore documentation files"
paths = ['''LICENSE$''', '''docs/.*\.(md|txt|rst)$''']

[[allowlists]]
description = "Ignore Chart.js usage documentation with cubeToken example"
paths = ['''docs/Packages/Chart\.js/getting-started/usage\.md''']
regexTarget = "line"
regexes = ['''cubeToken''']

# Enhanced allowlist for common development patterns (v8.28+ optimizations)
[[allowlists]]
description = "Common non-secret patterns in development"
regexTarget = "secret"
stopwords = [
    "client",
    "endpoint",
    "localhost",
    "127.0.0.1",
    "example",
    "demo",
    "test",
    "placeholder",
    "sample",
    "default",
    "public",
    "development",
    "staging",
    "production",
    "undefined",
    "null",
    "true",
    "false",
]

# Enhanced allowlist for TypeScript/JavaScript development
[[allowlists]]
description = "TypeScript/JavaScript development patterns"
regexTarget = "line"
regexes = [
    '''console\.(log|error|warn|info)''',
    '''process\.env\.NODE_ENV''',
    '''development|staging|production''',
    '''https?://localhost''',
    '''http://127\.0\.0\.1''',
    '''@types/.*''',
    '''eslint-disable''',
    '''prettier-ignore''',
    '''gitleaks:allow''',
    '''import.*from.*['"]/.*['"]''',
    '''export.*\{.*\}.*from''',
]

[[allowlists]]
description = "Electron and desktop app specific patterns"
regexTarget = "line"
regexes = [
    '''electron/.*''',
    '''process\.platform''',
    '''__dirname''',
    '''__filename''',
    '''contextBridge''',
    '''ipcMain''',
    '''ipcRenderer''',
    '''BrowserWindow''',
]

# Enhanced AI/ML development patterns
[[allowlists]]
description = "AI/ML development and testing patterns"
regexTarget = "line"
regexes = [
    '''sk-test-''',
    '''api-key-demo''',
    '''placeholder-key''',
    '''fake-api-key''',
    '''mock-token''',
    '''test-api-secret''',
]

# Modern framework and build tool patterns
[[allowlists]]
description = "Modern framework patterns"
regexTarget = "line"
regexes = [
    '''vite\.config\.(js|ts|mjs)''',
    '''vitest\.config\.(js|ts|mjs)''',
    '''tailwind\.config\.(js|ts|mjs)''',
    '''postcss\.config\.(js|ts|mjs)''',
    '''biome\.json''',
    '''\$\{(?:process\.)?env\.[A-Z_]+\}''',
    '''process\.env\.[A-Z_]+''',
]

[[allowlists]]
description = "Ignore all secrets in .secretlintrc.json (contains placeholder values)"
paths = ['''\.secretlintrc\.json$''']
