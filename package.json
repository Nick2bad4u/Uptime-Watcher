{
  "name": "uptime-watcher",
  "version": "7.0.0",
  "description": "An Electron app to monitor website uptime status",
  "author": "Nick2bad4u <20943337+Nick2bad4u@users.noreply.github.com> (https://Uptime-Watcher.typpi.online)",
  "contributors": [
    {
      "name": "Nick2bad4u",
      "email": "20943337+Nick2bad4u@users.noreply.github.com",
      "url": "https://github.com/Nick2bad4u"
    }
  ],
  "maintainers": [
    {
      "name": "Nick2bad4u",
      "email": "20943337+Nick2bad4u@users.noreply.github.com"
    }
  ],
  "homepage": "https://github.com/Nick2bad4u/Uptime-Watcher",
  "repository": {
    "type": "git",
    "url": "https://github.com/Nick2bad4u/Uptime-Watcher.git"
  },
  "bugs": {
    "url": "https://github.com/Nick2bad4u/Uptime-Watcher/issues",
    "email": "20943337+Nick2bad4u@users.noreply.github.com"
  },
  "license": "Unlicense",
  "readme": "README.md",
  "packageManager": "npm@11.4.2",
  "main": "dist-electron/main.js",
  "icon": "icons/favicon.ico",
  "appid": "io.github.uptime-watcher",
  "keywords": [
    "electron",
    "react",
    "uptime",
    "monitoring"
  ],
  "scripts": {
    "prepare": "husky",
    "commit": "npx git-cz",
    "start": "npm run dev",
    "start-fix": "npm run postbuild && npm run dev",
    "fix-db": "npm run postbuild",
    "dev": "vite",
    "dev:with-sqlite3": "npm run dev:sqlite3 && npm run dev",
    "dev:sqlite3": "npx cpy node_modules/node-sqlite3-wasm/dist/node-sqlite3-wasm.wasm dist-electron/ --flat",
    "build": "npm run build:electron-vite",
    "build:electron-main": "npx tsc -p tsconfig.electron.json && npm run postbuild",
    "build:electron-vite": "npx vite build --config ./vite.config.ts && npx tsc -p ./tsconfig.electron.json && npm run postbuild",
    "postbuild": "npx cpy node_modules/node-sqlite3-wasm/dist/node-sqlite3-wasm.wasm dist-electron/ --flat",
    "preview": "vite preview",
    "electron": "wait-on tcp:5173 && electron .",
    "electron-dev": "concurrently \"npm run dev\" \"npm run electron\"",
    "electron-main:debug": "npm run build:electron-main && NODE_ENV=development ./node_modules/.bin/electron ./dist-electron/main.js",
    "electron-pack": "electron-builder",
    "dist": "npm run build && electron-builder --publish=never",
    "copy-wasm": "npx cpy node_modules/node-sqlite3-wasm/dist/node-sqlite3-wasm.wasm dist-electron/ --flat",
    "copy-sqlite": "npx cpy node_modules/node-sqlite3-wasm/dist/node-sqlite3-wasm.wasm dist-electron/ --flat",
    "postinstall": "node ./scripts/download-sqlite3-wasm.mjs",
    "sqlite:download-wasm": "node ./scripts/download-sqlite3-wasm.mjs",
    "sqlite:verify-wasm": "node ./scripts/verify-sqlite3-wasm.js || echo 'Verification script not implemented yet.'",
    "sqlite:clean-wasm": "rm -f dist-electron/node-sqlite3-wasm.wasm",
    "sqlite:reinstall-wasm": "npm run sqlite:clean-wasm && npm run sqlite:download-wasm",
    "validate:components": "node ./scripts/validate-components.js",
    "start-both": "concurrently \"npm run dev\" \"npm run electron-dev\"",
    "lint": "npx eslint .",
    "lint:biome": "npx @biomejs/biome check",
    "lint:biome:fix": "npx @biomejs/biome check --fix",
    "lint:biome:write": "npx @biomejs/biome check --write",
    "lint:current": "npx eslint .",
    "lint:fix": "npx eslint . --fix",
    "lint:all": "npm run lint:js && npm run lint:ts && npm run lint:css && npm run lint:md && npm run lint:prettier && npm run lint:spell && npm run lint:json",
    "lint:css": "npx stylelint .",
    "lint:js": "npx eslint \"**/*.{js,jsx}\"",
    "lint:md": "npx markdownlint \"**/*.md\"",
    "lint:ts": "npx eslint \"**/*.{ts,tsx}\"",
    "lint:prettier": "npx prettier --check \"**/*.{js,jsx,ts,tsx,css,scss,md,json}\"",
    "lint:format": "npx prettier --check \"**/*.{js,jsx,ts,tsx,css,scss,md,json}\"",
    "lint:spell": "npx cspell \"**/*.{js,jsx,ts,tsx,md,css,scss,json}\" --gitignore",
    "lint:json": "npx eslint \"**/*.json\"",
    "lint:security": "npm audit && npx eslint . --ext .js,.jsx,.ts,.tsx --config .eslintrc.security.js",
    "lint:deps": "npx depcheck && npx knip",
    "lint:unused": "npx knip --include unlisted,unresolved,duplicates",
    "lint:unused-deps": "npx depcheck --ignores='@types/*,@testing-library/*,@vitest/*'",
    "lint:circular": "npx madge --circular --extensions ts,tsx,js,jsx src/",
    "lint:complexity": "npx eslint . --ext .js,.jsx,.ts,.tsx --format @eslint/eslint-formatter-compact",
    "lint:todo": "npx leasot 'src/**/*.{js,jsx,ts,tsx}' --reporter json",
    "lint:todos": "npx leasot 'src/**/*.{js,jsx,ts,tsx}' --reporter markdown",
    "lint:duplicates": "npx jscpd --threshold 3 --reporters html,console --ignore '**/node_modules/**,**/dist/**,**/dist-electron/**' src/",
    "lint:package": "npx sort-package-json && npm run lint:package-check",
    "lint:package-check": "npx publint && npx are-the-types-wrong --pack .",
    "lint:markdown-links": "npx markdown-link-check README.md",
    "lint:markdown-all": "find . -name '*.md' -not -path './node_modules/*' -not -path './dist/*' | xargs npx markdown-link-check",
    "lint:yaml": "npx eslint \"**/*.{yml,yaml}\" --parser yaml-eslint-parser",
    "lint:toml": "npx eslint \"**/*.toml\" --parser toml-eslint-parser",
    "lint:html": "npx eslint \"**/*.html\" --plugin html",
    "lint:css-fix": "npx stylelint . --fix",
    "lint:prettier-fix": "npx prettier --write \"**/*.{js,jsx,ts,tsx,css,scss,md,json}\"",
    "lint:spell-fix": "npx cspell \"**/*.{js,jsx,ts,tsx,md,css,scss,json}\" --gitignore --config .cspell.json",
    "lint:imports": "npx eslint . --ext .js,.jsx,.ts,.tsx --rule '{\"import/order\": \"error\", \"import/no-duplicates\": \"error\", \"unused-imports/no-unused-imports\": \"error\"}'",
    "lint:strict": "npx eslint . --ext .js,.jsx,.ts,.tsx --max-warnings 0",
    "lint:staged": "npx lint-staged",
    "lint:commit": "npx commitlint --from HEAD~1 --to HEAD --verbose",
    "lint:full": "npm run lint:package && npm run lint:deps && npm run lint:security && npm run lint:js && npm run lint:ts && npm run lint:css && npm run lint:md && npm run lint:prettier && npm run lint:spell && npm run lint:json && npm run lint:duplicates && npm run lint:circular && npm run lint:markdown-links",
    "lint:quick": "npm run lint:js && npm run lint:ts && npm run lint:prettier",
    "lint:pre-commit": "npm run lint:staged && npm run lint:quick",
    "lint:ci": "npm run lint:full && npm run lint:strict",
    "format": "npm run lint:prettier-fix && npm run lint:css-fix && npm run lint:fix",
    "format:check": "npm run lint:prettier && npm run lint:css && npm run lint",
    "quality": "npm run lint:full && npm run test:coverage",
    "quality:check": "npm run lint:ci && npm run test:codecov",
    "test": "vitest run --config vitest.electron.config.ts && vitest run",
    "test:both": "vitest run --config vitest.electron.config.ts --bail 1 && vitest run --bail 1",
    "test:electron:vite": "vitest run --config vitest.electron.config.ts --bail 1 && vitest run --bail 1",
    "test:run": "vitest run --bail 1",
    "test:run:bail": "vitest run --bail 1",
    "test:bail": "vitest --bail 1",
    "test:run:watch": "vitest --watch",
    "test:coverage": "vitest run --coverage",
    "test:ui": "vitest --ui",
    "test:watch": "vitest --watch",
    "test:debug": "vitest",
    "test:debug:watch": "vitest --watch --debug",
    "test:debug:ui": "vitest --ui --debug",
    "test:debug:coverage": "vitest run --coverage --debug",
    "test:electron": "vitest run --config vitest.electron.config.ts --bail 1",
    "test:electron:watch": "vitest --config vitest.electron.config.ts",
    "test:electron:coverage": "vitest run --config vitest.electron.config.ts --coverage --bail 1",
    "test:electron:ui": "vitest --config vitest.electron.config.ts --ui",
    "test:src": "vitest run src/App.test.tsx src/constants.test.ts src/utils/time.test.ts --environment=jsdom",
    "test:all": "npm run test:src && npm run test:electron",
    "test:all:coverage": "npm run test:coverage && npm run test:electron:coverage",
    "test:codecov": "npm run test:coverage && npm run test:electron:coverage",
    "clean": "rimraf dist dist-electron coverage .vite .turbo",
    "type-check": "tsc --noEmit",
    "check-types": "tsc --noEmit",
    "check:electron": "tsc --project tsconfig.electron.json --noEmit",
    "check:frontend": "tsc --project tsconfig.json --noEmit",
    "check:all": "npm run check:electron && npm run check:frontend",
    "dep:update": "npx npm-check-updates -u && npm install",
    "dep:check": "npx npm-check",
    "security:check": "npm audit",
    "security:fix": "npm audit fix",
    "debug:electron": "electron --inspect=5858 .",
    "debug:main": "electron --inspect-brk=5858 .",
    "debug:renderer": "vite --debug",
    "open:coverage": "npx open-cli coverage/index.html",
    "open:docs": "npx open-cli docs/index.html",
    "docs": "npx typedoc --out docs src",
    "docs:preview": "npx serve docs",
    "docs:clean": "rimraf docs",
    "prune": "npm prune",
    "rebuild": "npm run clean && npm install && npm run build",
    "postclean": "npm run clean && npm run postbuild",
    "build:prepublish": "npm run lint && npm run test && npm run build",
    "prebuild": "npm run lint && npm run type-check",
    "pretest:old": "npm run lint && npm run type-check",
    "prestart:old": "npm run lint && npm run type-check",
    "start:electron": "electron .",
    "start:renderer": "vite",
    "start:prod": "npm run build && npm run start:electron",
    "start:debug": "npm run debug:electron",
    "start:clean": "npm run clean && npm run start",
    "start:reset": "npm run clean && npm run build && npm run start",
    "reset": "npm run clean && npm install",
    "postreset": "npm run reset && npm run postbuild",
    "test:watch:electron": "vitest --config vitest.electron.config.ts --watch",
    "test:watch:frontend": "vitest --watch",
    "test:coverage:open": "npm run test:coverage && npm run open:coverage",
    "context": "repomix --compress --include \"src/**,electron/**\" --ignore \"**/test/**\"",
    "ai:context": "repomix --compress --include \"src/**,electron/**\" --ignore \"**/test/**\""
  },
  "dependencies": {
    "axios": "^1.10.0",
    "chart.js": "^4.5.0",
    "chartjs-adapter-date-fns": "^3.0.0",
    "chartjs-plugin-zoom": "^2.2.0",
    "electron-log": "^5.4.1",
    "electron-updater": "^6.6.2",
    "is-port-reachable": "^4.0.0",
    "node-sqlite3-wasm": "^0.8.45",
    "react": "^19.1.0",
    "react-chartjs-2": "^5.3.0",
    "react-dom": "^19.1.0",
    "react-icons": "^5.5.0",
    "validator": "^13.15.15",
    "zod": "^3.25.76",
    "zustand": "^5.0.6"
  },
  "devDependencies": {
    "@biomejs/biome": "2.1.1",
    "@codecov/vite-plugin": "^1.9.1",
    "@commitlint/cli": "^19.8.1",
    "@commitlint/config-conventional": "^19.8.1",
    "@commitlint/prompt": "^19.8.1",
    "@commitlint/prompt-cli": "^19.8.1",
    "@cspell/cspell-bundled-dicts": "^9.1.3",
    "@electron/notarize": "^3.0.1",
    "@electron/rebuild": "^4.0.1",
    "@eslint/css": "^0.9.0",
    "@eslint/eslintrc": "^3.3.1",
    "@eslint/js": "^9.30.1",
    "@eslint/json": "^0.12.0",
    "@eslint/markdown": "^6.6.0",
    "@executeautomation/database-server": "^1.1.0",
    "@microsoft/api-extractor": "^7.52.8",
    "@microsoft/tsdoc-config": "^0.17.1",
    "@playwright/test": "^1.53.2",
    "@tailwindcss/postcss": "^4.1.11",
    "@testing-library/jest-dom": "^6.6.3",
    "@testing-library/react": "^16.3.0",
    "@testing-library/user-event": "^14.6.1",
    "@types/better-sqlite3": "^7.6.13",
    "@types/eslint": "^9.6.1",
    "@types/jest": "^30.0.0",
    "@types/json-schema": "^7.0.15",
    "@types/mocha": "^10.0.10",
    "@types/node": "^24.0.10",
    "@types/prop-types": "^15.7.15",
    "@types/react": "^19.1.8",
    "@types/react-dom": "^19.1.6",
    "@types/semver": "^7.7.0",
    "@types/sqlite3": "^5.1.0",
    "@types/trusted-types": "^2.0.7",
    "@types/validator": "^13.15.2",
    "@types/webpack": "^5.28.5",
    "@typescript-eslint/eslint-plugin": "^8.36.0",
    "@typescript-eslint/parser": "^8.36.0",
    "@typescript-eslint/types": "^8.36.0",
    "@typescript/native-preview": "^7.0.0-dev.20250707.2",
    "@vitejs/plugin-react": "^4.6.0",
    "@vitest/coverage-istanbul": "^3.2.4",
    "@vitest/coverage-v8": "^3.2.4",
    "@vitest/eslint-plugin": "^1.3.4",
    "@vitest/snapshot": "^3.2.4",
    "@vitest/ui": "^3.2.4",
    "async": "^3.2.6",
    "autoprefixer": "^10.4.21",
    "canvas": "^3.1.2",
    "concurrently": "^9.2.0",
    "cpy-cli": "^5.0.0",
    "cross-env": "^7.0.3",
    "cspell": "^9.1.3",
    "depcheck": "^1.4.7",
    "electron": "^37.2.0",
    "electron-builder": "^24.13.3",
    "electron-builder-squirrel-windows": "^24.13.3",
    "electron-publish": "^26.0.11",
    "eslint": "^9.30.1",
    "eslint-config-prettier": "^10.1.5",
    "eslint-formatter-compact": "^8.40.0",
    "eslint-import-resolver-typescript": "^4.4.4",
    "eslint-plugin-boundaries": "^5.0.1",
    "eslint-plugin-compat": "^6.0.2",
    "eslint-plugin-css": "^0.11.0",
    "eslint-plugin-eslint-comments": "^3.2.0",
    "eslint-plugin-filenames": "^1.3.2",
    "eslint-plugin-functional": "^9.0.2",
    "eslint-plugin-html": "^8.1.3",
    "eslint-plugin-import": "^2.32.0",
    "eslint-plugin-json": "^4.0.1",
    "eslint-plugin-jsx-a11y": "^6.10.2",
    "eslint-plugin-markdown": "^5.1.0",
    "eslint-plugin-perfectionist": "^4.15.0",
    "eslint-plugin-prefer-arrow": "^1.2.3",
    "eslint-plugin-prettier": "^5.5.1",
    "eslint-plugin-promise": "^7.2.1",
    "eslint-plugin-react": "^7.37.5",
    "eslint-plugin-react-hooks": "^5.2.0",
    "eslint-plugin-react-refresh": "^0.4.20",
    "eslint-plugin-redos": "^4.5.0",
    "eslint-plugin-regexp": "^2.9.0",
    "eslint-plugin-security": "^3.0.1",
    "eslint-plugin-sonarjs": "^3.0.4",
    "eslint-plugin-sort-class-members": "^1.20.0",
    "eslint-plugin-testing-library": "^7.5.3",
    "eslint-plugin-toml": "^0.12.0",
    "eslint-plugin-tsdoc": "^0.4.0",
    "eslint-plugin-unicorn": "^59.0.1",
    "eslint-plugin-unused-imports": "^4.1.4",
    "eslint-plugin-vitest-globals": "^1.5.0",
    "eslint-plugin-yml": "^1.18.0",
    "git-cliff": "^2.9.1",
    "globals": "^16.3.0",
    "globals-vitest": "^3.2.4",
    "husky": "^9.1.7",
    "jscpd": "^4.0.5",
    "jsdom": "^26.1.0",
    "jsonc-eslint-parser": "^2.4.0",
    "knip": "^5.61.3",
    "lint-staged": "^16.1.2",
    "madge": "^8.0.0",
    "markdown-link-check": "^3.13.7",
    "markdownlint": "^0.38.0",
    "msw": "^2.10.3",
    "nyc": "^17.1.0",
    "pkg-types": "^2.2.0",
    "postcss": "^8.5.6",
    "postcss-assets": "^6.0.0",
    "postcss-inline-svg": "^6.0.0",
    "postcss-reporter": "^7.1.0",
    "prettier": "^3.6.2",
    "prettier-eslint": "^16.4.2",
    "react-refresh": "^0.17.0",
    "stylelint": "^16.21.1",
    "stylelint-config-recommended": "^16.0.0",
    "stylelint-config-standard": "^38.0.0",
    "stylelint-config-standard-scss": "^15.0.1",
    "stylelint-config-tailwindcss": "^1.0.0",
    "stylelint-order": "^7.0.0",
    "tailwindcss": "^4.1.11",
    "toml-eslint-parser": "^0.10.0",
    "ts-morph": "^26.0.0",
    "ts-morph-helpers": "^0.6.3",
    "tslib": "^2.8.1",
    "type-fest": "^4.41.0",
    "typescript": "^5.8.3",
    "typescript-eslint": "^8.36.0",
    "typescript-eslint-language-service": "^5.0.5",
    "typestat": "^0.8.18",
    "vite": "^7.0.2",
    "vite-bundle-visualizer": "^1.2.1",
    "vite-plugin-checker": "^0.10.0",
    "vite-plugin-electron": "^0.29.0",
    "vite-plugin-eslint2": "^5.0.4",
    "vite-plugin-mcp": "^0.2.3",
    "vite-plugin-static-copy": "^3.1.0",
    "vitest": "^3.2.4",
    "wait-on": "^8.0.3",
    "yaml-eslint-parser": "^1.3.0",
    "zod-to-json-schema": "^3.24.6"
  },
  "overrides": {
    "@codecov/vite-plugin": {
      "vite": "$vite"
    }
  },
  "enableForWorkspaceTypeScriptVersions": true,
  "enableForWorkspaceJavaScriptVersions": true,
  "build": {
    "icon": "icons/favicon.ico",
    "appId": "io.github.uptime-watcher",
    "artifactName": "Uptime-Watcher-${platform}-${arch}-${version}.${ext}",
    "asar": true,
    "publish": [
      {
        "provider": "github",
        "owner": "Nick2bad4u",
        "repo": "Uptime-Watcher"
      }
    ],
    "productName": "Uptime-Watcher",
    "directories": {
      "output": "dist"
    },
    "files": [
      "dist-electron/**/*",
      "dist/**/*",
      "node_modules/**/*",
      "!node_modules/@tailwindcss/oxide-*",
      "!node_modules/@tailwindcss/oxide-*/**",
      "!dist/mac-universal-*",
      "!dist/*.app",
      "!dist/*.dmg",
      "!dist/*.zip"
    ],
    "win": {
      "icon": "icons/favicon-256x256.ico",
      "target": [
        "nsis",
        "nsis-web",
        "zip",
        "7z",
        "portable",
        "squirrel",
        "msi",
        "tar.xz",
        "tar.gz",
        "tar.bz2"
      ],
      "legalTrademarks": "Uptime Watcher",
      "requestedExecutionLevel": "asInvoker"
    },
    "nsis": {
      "oneClick": false,
      "allowElevation": true,
      "allowToChangeInstallationDirectory": true,
      "createDesktopShortcut": true,
      "createStartMenuShortcut": true,
      "runAfterFinish": true,
      "artifactName": "Uptime-Watcher-nsis-${arch}-${version}.${ext}"
    },
    "nsisWeb": {
      "artifactName": "Uptime-Watcher-nsis-web-${arch}-${version}.${ext}"
    },
    "portable": {
      "artifactName": "Uptime-Watcher-portable-${arch}-${version}.${ext}"
    },
    "squirrelWindows": {
      "artifactName": "Uptime-Watcher-squirrel-${arch}-${version}.${ext}"
    },
    "msi": {
      "artifactName": "Uptime-Watcher-msi-${arch}-${version}.${ext}"
    },
    "appImage": {
      "artifactName": "Uptime-Watcher-appimage-${arch}-${version}.${ext}"
    },
    "deb": {
      "artifactName": "Uptime-Watcher-deb-${arch}-${version}.${ext}"
    },
    "rpm": {
      "artifactName": "Uptime-Watcher-rpm-${arch}-${version}.${ext}"
    },
    "snap": {
      "artifactName": "Uptime-Watcher-snap-${arch}-${version}.${ext}"
    },
    "freebsd": {
      "artifactName": "Uptime-Watcher-freebsd-${arch}-${version}.${ext}"
    },
    "pacman": {
      "artifactName": "Uptime-Watcher-pacman-${arch}-${version}.${ext}"
    },
    "p5p": {
      "artifactName": "Uptime-Watcher-p5p-${arch}-${version}.${ext}"
    },
    "apk": {
      "artifactName": "Uptime-Watcher-apk-${arch}-${version}.${ext}"
    },
    "dmg": {
      "artifactName": "Uptime-Watcher-dmg-${arch}-${version}.${ext}"
    },
    "pkg": {
      "artifactName": "Uptime-Watcher-pkg-${arch}-${version}.${ext}"
    },
    "flatpak": {
      "artifactName": "Uptime-Watcher-flatpak-${arch}-${version}.${ext}"
    },
    "mac": {
      "icon": "icons/favicon-512x512.icns",
      "target": [
        "dmg",
        "zip",
        "pkg",
        "tar.xz",
        "tar.gz",
        "tar.bz2"
      ],
      "category": "public.app-category.productivity",
      "hardenedRuntime": true,
      "gatekeeperAssess": true,
      "x64ArchFiles": "Contents/Resources/app.asar.unpacked/node_modules/lightningcss-darwin-arm64/**"
    },
    "linux": {
      "icon": "icons/favicon-256x256.png",
      "target": [
        "AppImage",
        "deb",
        "rpm",
        "snap",
        "freebsd",
        "pacman",
        "apk",
        "zip",
        "tar.xz",
        "tar.gz",
        "tar.bz2"
      ],
      "category": "Utility",
      "synopsis": "A cross-platform Electron app to monitor website uptime status",
      "maintainer": "Nick2bad4u <20943337+Nick2bad4u@users.noreply.github.com>",
      "desktop": {
        "entry": {
          "Name": "Uptime Watcher",
          "Comment": "View and analyze Website Uptime",
          "Categories": "Utility;"
        }
      }
    }
  },
  "os": [
    "windows",
    "linux",
    "mac",
    "macOS",
    "win64",
    "win64-exe",
    "win64-squirrel",
    "win64-msi",
    "win64-zip",
    "win64-7z",
    "win64-nsis",
    "win64-nsis-web",
    "win64-portable",
    "win64-tar.bz2",
    "win64-tar.gz",
    "win64-tar.xz",
    "win32",
    "win32-exe",
    "win32-squirrel",
    "win32-msi",
    "win32-zip",
    "win32-7z",
    "win32-nsis",
    "win32-nsis-web",
    "win32-portable",
    "win32-tar.bz2",
    "win32-tar.gz",
    "win32-tar.xz",
    "mac-x64-dmg",
    "mac-x64-pkg",
    "mac-x64-tar.xz",
    "mac-x64-tar.gz",
    "mac-x64-tar.bz2",
    "mac-arm64-dmg",
    "mac-arm64-pkg",
    "mac-arm64-tar.xz",
    "mac-arm64-tar.gz",
    "mac-arm64-tar.bz2",
    "darwin",
    "freebsd",
    "apk",
    "pacman",
    "deb",
    "rpm",
    "snap"
  ]
}
