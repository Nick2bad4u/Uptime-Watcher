{
    "$schema": "https://raw.githubusercontent.com/streetsidesoftware/cspell/main/cspell.schema.json",
    "allowCompoundWords": true,
    "cache": {
        "cacheFormat": "universal",
        "cacheLocation": ".cache/.cspellcache",
        "cacheStrategy": "metadata",
        "useCache": true
    },
    "dictionaries": [
        "aws",
        "bash",
        "companies",
        "cryptocurrencies",
        "css",
        "docker",
        "en-us",
        "filetypes",
        "fonts",
        "gaming-terms",
        "git",
        "google",
        "html-symbol-entities",
        "html",
        "java",
        "javascript",
        "lorem-ipsum",
        "markdown",
        "misc",
        "node",
        "npm",
        "powershell",
        "public-licenses",
        "softwareTerms",
        "typescript",
        "electron",
        "react",
        "tailwindcss",
        "Uptime-Watcher Folder Dictionary",
        "Uptime-Watcher Project Dictionary",
        "Uptime-Watcher User Dictionary"
    ],
    "dictionaryDefinitions": [
        {
            "addWords": true,
            "description": "Words used in the Uptime-Watcher project",
            "name": "Uptime-Watcher Project Dictionary",
            "path": "./custom-words.txt",
            "scope": "folder"
        },
        {
            "addWords": true,
            "description": "User-specific words for Uptime-Watcher",
            "name": "Uptime-Watcher User Dictionary",
            "path": "./custom-words.txt",
            "scope": "user"
        },
        {
            "addWords": true,
            "description": "VSCode workspace dictionary",
            "name": "Uptime-Watcher Folder Dictionary",
            "path": "./custom-words.txt",
            "scope": "folder"
        }
    ],
    "enableFiletypes": [
        "typescript",
        "javascript",
        "json",
        "jsonc",
        "yaml",
        "yml",
        "toml",
        "markdown",
        "html",
        "css",
        "scss",
        "less"
    ],
    "gitignoreRoot": "./",
    "ignorePaths": [
        ".cspell.json",
        ".checkov.yml",
        ".github/**",
        ".vscodeignore",
        "config/tools/ActionLintConfig.yaml",
        "_config.yml",
        "config/tools/flatpak-build.yml",
        "config/tools/kics.yaml",
        ".djlintrc",
        ".devskim.json",
        "**/test/**",
        "scripts",
        "**CHANGELOG.md",
        "dist-electron",
        "config/tools/knip.json",
        "package.json",
        "repomix.config.json",
        "vite.config.ts",
        "dist",
        "docs",
        "node_modules",
        "release",
        "coverage",
        "*.min.js",
        "*.min.css",
        "**/*.map",
        "package-lock.json",
        "yarn.lock",
        "pnpm-lock.yaml",
        "*.log",
        "**/*.wasm",
        "**/*.snap",
        "**/.git/**",
        "**/build/**",
        "**/out/**",
        "**/tmp/**",
        "**/.next/**",
        "**/.nuxt/**",
        "**/.svelte-kit/**",
        "**/target/**",
        "**/.cache/**",
        "**/.vscode/settings.json",
        "**/tsconfig.*.tsbuildinfo",
        "**/*.d.ts.map",
        "**/*.js.map",
        "**/*.css.map"
    ],
    "ignoreWords": [],
    "import": [],
    "language": "en",
    "languageSettings": [
        {
            "allowCompoundWords": true,
            "caseSensitive": false,
            "ignoreRegExpList": [
                "/\\w*[A-Z]{2,}\\w*/g",
                "/import\\s+.*?from\\s+['\"][^'\"]*['\"];?/g",
                "/console\\.(log|warn|error|info)\\s*\\([^)]*\\)/g",
                "/\\/\\*\\s*cspell:.*?\\*\\//gi",
                "/\\/\\/\\s*cspell:.*$/gm",
                "/class\\s+[A-Z][a-zA-Z0-9]*\\s*{/g",
                "/interface\\s+[A-Z][a-zA-Z0-9]*\\s*{/g",
                "/type\\s+[A-Z][a-zA-Z0-9]*\\s*=/g"
            ],
            "languageId": "typescript,javascript,typescriptreact,javascriptreact"
        },
        {
            "ignoreRegExpList": [
                "/\"[^\"]*\"\\s*:/g",
                "/\"\\$schema\"\\s*:\\s*\"[^\"]*\"/g"
            ],
            "languageId": "json,jsonc"
        },
        {
            "ignoreRegExpList": [
                "/\\[.*?\\]\\(.*?\\)/g",
                "/!\\[.*?\\]\\(.*?\\)/g",
                "/```[\\s\\S]*?```/g",
                "/`[^`]*`/g",
                "/#{1,6}\\s+.+$/gm",
                "/^\\s*[-*+]\\s+/gm"
            ],
            "languageId": "markdown"
        },
        {
            "ignoreRegExpList": [
                "/@[a-z-]+/g",
                "/\\.[a-z-]+[a-z0-9-]*/gi",
                "/#[a-z-]+[a-z0-9-]*/gi",
                "/--[a-z-]+[a-z0-9-]*/gi"
            ],
            "languageId": "css,scss,sass,less"
        },
        {
            "ignoreRegExpList": [
                "/<[^>]*>/g",
                "/class=\"[^\"]*\"/g",
                "/id=\"[^\"]*\"/g",
                "/data-[a-z-]+=\"[^\"]*\"/g"
            ],
            "languageId": "html"
        }
    ],
    "maxDuplicateProblems": 5,
    "maxNumberOfProblems": 100,
    "minWordLength": 3,
    "numSuggestions": 10,
    "patterns": [
        {
            "name": "camelCase",
            "pattern": "/\\b[a-z][a-zA-Z0-9]*\\b/g"
        },
        {
            "name": "kebab-case",
            "pattern": "/\\b[a-z][a-z0-9-]*\\b/g"
        },
        {
            "name": "CONSTANTS",
            "pattern": "/\\b[A-Z][A-Z0-9_]*\\b/g"
        }
    ],
    "suggestionsTimeout": 800,
    "useGitignore": true,
    "validateDirectives": true,
    "version": "0.2",
    "words": []
}
