# ===============================================================================
# SonarCloud Configuration for Uptime Watcher - Electron Desktop Application
# Modern 2025 Configuration with Enhanced Security, Quality Gates, and CI/CD Integration
# ===============================================================================

# Project identification
sonar.organization=nick2bad4u
sonar.projectKey=Nick2bad4u_Uptime-Watcher
sonar.projectName=Uptime-Watcher
sonar.projectVersion=11.0.0
sonar.projectDescription=Electron-based desktop application for monitoring website uptime with real-time notifications and analytics

# SonarCloud server configuration
sonar.host.url=https://sonarcloud.io

# Authentication (configured via SONAR_TOKEN environment variable in CI/CD)
# Generate token at: My Account → Security → Generate Tokens
# sonar.login=CONFIGURED_VIA_ENVIRONMENT_VARIABLE

# ===============================================================================
# SOURCE CONFIGURATION
# ===============================================================================

# Main source directories
sonar.sources=src,electron,shared

# Comprehensive exclusions for build artifacts, dependencies, and generated files
sonar.exclusions=**/node_modules/**,**/dist/**,**/dist-electron/**,**/build/**,**/coverage/**,**/release/**,**/report/**,**/html/**,**/scripts/**,**/docs/**,**/benchmarks/**,**/assets/**,**/icons/**,**/public/**,**/*.config.*,**/*.d.ts,**/test/**,**/tests/**,**/__tests__/**,**/__mocks__/**,**/*.test.ts,**/*.test.tsx,**/*.spec.ts,**/*.spec.tsx,**/*.bench.ts,**/vitest.*.config.ts,**/jest.config.*,**/cypress/**,**/e2e/**,**/fix-*.ps1,**/.vscode/**,**/.idea/**,**/tmp/**,**/temp/**,**/*.log,**/*.cache,**/repomix-output.*,**/generated-sources.json,**/flatpak-build/**,**/*.wasm,**/*.node,**/LICENSE*,**/CHANGELOG.md,**/README.md

# ===============================================================================
# LANGUAGE AND FILE TYPE CONFIGURATION
# ===============================================================================

# TypeScript configuration (primary language, updated for TypeScript 5.0+ support)
sonar.typescript.file.suffixes=.ts,.tsx,.mts,.cts
sonar.typescript.tsconfigPaths=tsconfig.json,tsconfig.electron.json,config/testing/tsconfig.electron.test.json,config/testing/tsconfig.test.json,config/testing/tsconfig.shared.test.json,config/benchmarks/tsconfig.bench.json

# JavaScript configuration (avoid conflicts with TypeScript, updated for modern JS)
sonar.javascript.file.suffixes=.js,.jsx,.mjs,.cjs

# Additional file inclusions for analysis (expanded for comprehensive coverage)
sonar.inclusions=**/*.ts,**/*.tsx,**/*.mts,**/*.cts,**/*.js,**/*.jsx,**/*.mjs,**/*.cjs,**/*.json,**/*.css,**/*.scss,**/*.less

# ===============================================================================
# TEST CONFIGURATION
# ===============================================================================

# Test source directories
sonar.tests=src/test,electron/test,shared/test

# Test file patterns
sonar.test.inclusions=**/*.test.ts,**/*.test.tsx,**/*.spec.ts,**/*.spec.tsx,**/*.bench.ts

# Test exclusions
sonar.test.exclusions=**/node_modules/**,**/dist/**,**/dist-electron/**,**/coverage/**,**/build/**

# ===============================================================================
# CODE COVERAGE CONFIGURATION
# ===============================================================================

# Coverage report paths for JavaScript and TypeScript (unified configuration)
# Note: sonar.typescript.lcov.reportPaths is deprecated - use sonar.javascript.lcov.reportPaths for both JS and TS
sonar.javascript.lcov.reportPaths=coverage/lcov.info,coverage/electron/lcov.info,coverage/shared/lcov.info

# Coverage exclusions (align with test exclusions)
sonar.coverage.exclusions=**/test/**,**/tests/**,**/__tests__/**,**/__mocks__/**,**/*.test.*,**/*.spec.*,**/*.bench.*,**/dist/**,**/dist-electron/**,**/coverage/**,**/release/**,**/scripts/**,**/docs/**,**/report/**,**/benchmarks/**,**/assets/**,**/html/**,**/icons/**,**/*.config.*,**/*.d.ts,**/fix-*.ps1,**/node_modules/**,**/generated-sources.json

# ===============================================================================
# CODE ANALYSIS CONFIGURATION
# ===============================================================================

# Basic analysis settings
sonar.sourceEncoding=UTF-8
sonar.scm.provider=git
sonar.scm.forceReloadAll=false

# Performance settings (updated for 2024-2025 standards)
sonar.javascript.maxFileSize=2000000
# Note: sonar.typescript.node.maxspace is deprecated - use sonar.javascript.node.maxspace for both JS and TS
sonar.javascript.node.maxspace=8192

# Bundle detection (new feature to exclude generated/bundled code)
sonar.javascript.detectBundles=true

# Debug memory (useful for troubleshooting large projects)
# sonar.javascript.node.debugMemory=false

# Environment configuration (updated for modern frameworks)
sonar.javascript.environments=node,browser,electron,jest,vitest,es2024

# ESLint integration for external rules import
sonar.eslint.reportPaths=eslint-report.json

# ===============================================================================
# QUALITY GATE CONFIGURATION
# ===============================================================================

# Enable quality gate waiting (blocks CI/CD on failure)
sonar.qualitygate.wait=true

# Quality gate timeout (in seconds, increased for complex projects)
sonar.qualitygate.timeout=600

# Enable new code definition for focused quality gates
sonar.newCode.referenceBranch=main

# ===============================================================================
# DUPLICATION DETECTION
# ===============================================================================

# Duplication exclusions
sonar.cpd.exclusions=**/test/**,**/tests/**,**/__tests__/**,**/__mocks__/**,**/benchmarks/**,**/assets/**,**/html/**,**/icons/**,**/scripts/**,**/docs/**,**/*.config.*,**/*.d.ts,**/fix-*.ps1,**/generated-sources.json

# Minimum block size for duplication detection
sonar.cpd.js.minimumTokens=100
sonar.cpd.ts.minimumTokens=100

# ===============================================================================
# SECURITY CONFIGURATION
# ===============================================================================

# Security hotspot assignment
sonar.issues.defaultAssigneeLogin=Nick2bad4u@github

# Security exclusions (if needed for false positives)
sonar.security.exclusions=

# Security hotspot exclusions
sonar.security.hotspots.exclusions=

# ===============================================================================
# PERFORMANCE AND CACHING
# ===============================================================================

# Enable sensor cache for faster analysis
sonar.sensor.cache.project.enable=true

# Scanner cache settings
sonar.scanner.cache.enable=true

# Parallel processing
sonar.scanner.metadataFilePath=.scannerwork/report-task.txt

# ===============================================================================
# ISSUE MANAGEMENT
# ===============================================================================

# Issue assignment

# Issue exclusions for known false positives or acceptable issues
sonar.issue.ignore.multicriteria=e1,e2,e3,e4,e5

# Exclude TODO/FIXME comments from being reported as issues
sonar.issue.ignore.multicriteria.e1.ruleKey=typescript:S1135
sonar.issue.ignore.multicriteria.e1.resourceKey=**/*.ts

# Exclude console.log usage in development files
sonar.issue.ignore.multicriteria.e2.ruleKey=typescript:S2228
sonar.issue.ignore.multicriteria.e2.resourceKey=**/test/**,**/scripts/**,**/docs/**

# Exclude magic numbers in configuration files
sonar.issue.ignore.multicriteria.e3.ruleKey=typescript:S109
sonar.issue.ignore.multicriteria.e3.resourceKey=**/*.config.*,**/constants.ts

# Exclude unused imports in test files
sonar.issue.ignore.multicriteria.e4.ruleKey=typescript:S1128
sonar.issue.ignore.multicriteria.e4.resourceKey=**/test/**,**/*.test.*,**/*.spec.*

# Exclude complexity warnings in legacy code
sonar.issue.ignore.multicriteria.e5.ruleKey=typescript:S3776
sonar.issue.ignore.multicriteria.e5.resourceKey=**/legacy/**,**/vendor/**

# Exclude benchmark and test code from certain rules
sonar.issue.ignore.multicriteria.e6.ruleKey=typescript:S2245
sonar.issue.ignore.multicriteria.e6.resourceKey=**/benchmarks/**,**/tests/**,**/test/**

sonar.issue.ignore.multicriteria.e6.ruleKey=typescript:S1313
sonar.issue.ignore.multicriteria.e6.resourceKey=**/benchmarks/**,**/tests/**,**/test/**

# ===============================================================================
# BRANCH AND PULL REQUEST CONFIGURATION
# ===============================================================================

# Main branch configuration
sonar.branch.name=main

# New code definition (for quality gate focusing on new code)
# ===============================================================================
# REPORTING CONFIGURATION
# ===============================================================================

# Test execution report paths (modern test reporting)
sonar.testExecutionReportPaths=test-report.xml,coverage/test-results.xml,test-results.json

# Generic test data paths (expanded format support)
sonar.genericTest.reportPaths=test-results.xml,test-results.json

# External issue report paths (security and quality tool integration)
sonar.externalIssuesReportPaths=security-report.json,eslint-report.json

# ===============================================================================
# CUSTOM RULES AND PLUGINS
# ===============================================================================

# ESLint integration (preferred method for custom rules in 2024-2025)
# ESLint integration (preferred method for custom rules in 2024-2025)
# External issues import (for security tools integration)
# External issues import (for security tools integration)
# Plugin configuration (optimized for cloud performance)
sonar.plugins.downloadOnlyRequired=true

# Sensor optimization (modern caching features)
sonar.sensor.cache.project.enable=true

# ===============================================================================
# METADATA AND DOCUMENTATION
# ===============================================================================

# Additional project metadata
sonar.links.homepage=https://github.com/Nick2bad4u/Uptime-Watcher
sonar.links.ci=https://github.com/Nick2bad4u/Uptime-Watcher/actions
sonar.links.scm=https://github.com/Nick2bad4u/Uptime-Watcher
sonar.links.issue=https://github.com/Nick2bad4u/Uptime-Watcher/issues

# Project tags for organization
sonar.projectTags=electron,typescript,react,desktop,monitoring,uptime,nodejs

# ===============================================================================
# ADDITIONAL NOTES AND DOCUMENTATION
# ===============================================================================

# Quality Gate Recommendations (Updated 2024-2025 Standards):
# - Coverage on New Code: ≥ 80%
# - Maintainability Rating: A
# - Reliability Rating: A
# - Security Rating: A
# - Security Hotspots Reviewed: 100%
# - Duplicated Lines: < 3%
# - Blocker Issues: 0
# - Critical Issues: 0
# - Technical Debt Ratio: ≤ 5%

# CI/CD Integration (Modern GitHub Actions):
# 1. Set SONAR_TOKEN environment variable in GitHub Actions secrets
# 2. Use SonarSource/sonarcloud-github-action@master in workflows
# 3. Enable branch protection rules requiring SonarCloud checks
# 4. Configure webhooks for Slack/Discord notifications
# 5. Use sonar.qualitygate.wait=true for CI/CD blocking

# Coverage Generation Commands (Updated):
# - Frontend: npm run test:coverage
# - Backend: npm run test:electron:coverage
# - Combined: npm run test:all:coverage
# - Vitest: npm run test:vitest -- --coverage

# SonarCloud Connected Mode Configuration:
# {
#   "sonarCloudOrganization": "nick2bad4u",
#   "projectKey": "Nick2bad4u_Uptime-Watcher",
#   "region": "EU"
# }

# SonarLint IDE Integration (2024-2025):
# - Install SonarLint extension in VS Code/IntelliJ/WebStorm
# - Connect to SonarCloud using organization token
# - Enable real-time code quality feedback
# - Configure same rules as SonarCloud project
# - Enable Connected Mode for team synchronization

# Modern TypeScript Support:
# - TypeScript 5.0+ fully supported
# - Modern file extensions (.mts, .cts) included
# - ES2024 environment configuration
# - Enhanced bundle detection for optimized builds

# Deprecated Properties Removed:
# - sonar.typescript.lcov.reportPaths (use sonar.javascript.lcov.reportPaths)
# - sonar.typescript.node.maxspace (use sonar.javascript.node.maxspace)
# - sonar.typescript.eslint.reportPaths (use sonar.eslint.reportPaths)
